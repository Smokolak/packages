From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@serpentos.com>
Date: Wed, 11 Sep 2024 01:54:58 +0000
Subject: [PATCH] gpt-auto-generate: Stop automounting `xbootldr` and `esp`

This is now exclusively the management domain of blsforme by way of `moss`
integration in Serpent OS.

We cannot risk vfat corruption issues therefore we only keep the ESP/XBOOTLDR
mounted as and when we need them, and immediately umount when finished.

Signed-off-by: Ikey Doherty <ikey@serpentos.com>
---
 src/gpt-auto-generator/gpt-auto-generator.c | 103 +-------------------
 1 file changed, 4 insertions(+), 99 deletions(-)

diff --git a/src/gpt-auto-generator/gpt-auto-generator.c b/src/gpt-auto-generator/gpt-auto-generator.c
index 8bb32afb27..5bfa094a80 100644
--- a/src/gpt-auto-generator/gpt-auto-generator.c
+++ b/src/gpt-auto-generator/gpt-auto-generator.c
@@ -464,109 +464,14 @@ static int add_automount(
 }
 
 static int add_partition_xbootldr(DissectedPartition *p) {
-        _cleanup_free_ char *options = NULL;
-        int r;
-
-        assert(p);
-
-        if (in_initrd()) {
-                log_debug("In initrd, ignoring the XBOOTLDR partition.");
-                return 0;
-        }
-
-        r = path_is_busy("/boot");
-        if (r < 0)
-                return r;
-        if (r > 0)
-                return 0;
-
-        r = partition_pick_mount_options(
-                        PARTITION_XBOOTLDR,
-                        dissected_partition_fstype(p),
-                        /* rw= */ true,
-                        /* discard= */ false,
-                        &options,
-                        /* ret_ms_flags= */ NULL);
-        if (r < 0)
-                return log_error_errno(r, "Failed to determine default mount options for /boot/: %m");
-
-        return add_automount(
-                        "boot",
-                        p->node,
-                        "/boot",
-                        p->fstype,
-                        /* rw= */ true,
-                        /* growfs= */ false,
-                        options,
-                        "Boot Loader Partition",
-                        120 * USEC_PER_SEC);
+        log_debug("Solus does not auto-mount the /boot partition.");
+        return 0;
 }
 
 #if ENABLE_EFI
 static int add_partition_esp(DissectedPartition *p, bool has_xbootldr) {
-        const char *esp_path = NULL, *id = NULL;
-        _cleanup_free_ char *options = NULL;
-        int r;
-
-        assert(p);
-
-        if (in_initrd()) {
-                log_debug("In initrd, ignoring the ESP.");
-                return 0;
-        }
-
-        /* Check if there's an existing fstab entry for ESP. If so, we just skip the gpt-auto logic. */
-        r = fstab_has_node(p->node);
-        if (r < 0)
-                log_warning_errno(r, "Failed to check if fstab entry for device '%s' exists, ignoring: %m",
-                                  p->node);
-        if (r > 0)
-                return 0;
-
-        /* If XBOOTLDR partition is not present and /boot/ is unused and empty, we'll take that.
-         * Otherwise, if /efi/ is unused and empty (or missing), we'll take that.
-         * Otherwise, we do nothing. */
-        if (!has_xbootldr) {
-                r = path_is_busy("/boot");
-                if (r < 0)
-                        return r;
-                if (r == 0) {
-                        esp_path = "/boot";
-                        id = "boot";
-                }
-        }
-
-        if (!esp_path) {
-                r = path_is_busy("/efi");
-                if (r < 0)
-                        return r;
-                if (r > 0)
-                        return 0;
-
-                esp_path = "/efi";
-                id = "efi";
-        }
-
-        r = partition_pick_mount_options(
-                        PARTITION_ESP,
-                        dissected_partition_fstype(p),
-                        /* rw= */ true,
-                        /* discard= */ false,
-                        &options,
-                        /* ret_ms_flags= */ NULL);
-        if (r < 0)
-                return log_error_errno(r, "Failed to determine default mount options for %s: %m", esp_path);
-
-        return add_automount(
-                        id,
-                        p->node,
-                        esp_path,
-                        p->fstype,
-                        /* rw= */ true,
-                        /* growfs= */ false,
-                        options,
-                        "EFI System Partition Automount",
-                        120 * USEC_PER_SEC);
+        log_debug("Solus does not auto-mount the /efi partition.");
+        return 0;
 }
 #else
 static int add_partition_esp(DissectedPartition *p, bool has_xbootldr) {
